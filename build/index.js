!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("websocket-express",[],e):"object"==typeof exports?exports["websocket-express"]=e():t["websocket-express"]=e()}(global,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=2)}([function(t,e){t.exports=require("crypto")},function(t,e){t.exports=require("url")},function(t,e,r){t.exports=r(7)},function(t,e){t.exports=require("mongodb")},function(t,e){},function(t,e){},function(t,e){},function(t,e,r){"use strict";r.r(e);var n=r(1);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t){return t?new Promise(e=>setTimeout(e,t)):null}class s{constructor(t={},e=0){this.simulatedLatency=e,i(this,"data",void 0),i(this,"keyList",[]),i(this,"keys",{}),this.data=new Map,Object.keys(t).forEach(e=>{const r=e;this.keyList.push(r),this.keys[r]={map:new Map,options:t[r]}})}async add(t){await a(this.simulatedLatency),this.internalCheckDuplicates(t,!0),this.data.set(t.id,JSON.stringify(t)),this.internalPopulateIndices(t)}async update(t,e,r,{upsert:n=!1}={}){await a(this.simulatedLatency);const i=this.internalGetIds(t,e)[0];if(void 0===i)return void(n&&await this.add(Object.assign({[t]:e},r)));const s=JSON.parse(this.data.get(i)),o=Object.assign({},s,r);if(o.id!==s.id)throw new Error("Cannot update id");this.internalRemoveIndices(s);try{this.internalCheckDuplicates(o,!1)}catch(t){throw this.internalPopulateIndices(s),t}this.data.set(o.id,JSON.stringify(o)),this.internalPopulateIndices(o)}async get(t,e,r){const n=await this.getAll(t,e,r);return n.length?n[0]:null}async getAll(t,e,r){let n;return await a(this.simulatedLatency),(n=t?this.internalGetIds(t,e):[...this.data.keys()]).map(t=>(function(t,e){if(!e)return t;const r={};return e.forEach(e=>{r[e]=t[e]}),r})(JSON.parse(this.data.get(t)),r))}internalGetIds(t,e){if("id"===t){const t=e;return this.data.has(t)?[t]:[]}const r=this.keys[t];if(!r)throw new Error(`Requested key ${t} not indexed`);const n=r.map.get(e);return n?[...n]:[]}internalCheckDuplicates(t,e){if(e&&this.data.has(t.id))throw new Error("duplicate");this.keyList.forEach(e=>{const{map:r,options:n}=this.keys[e];if(n.unique&&r.has(t[e]))throw new Error("duplicate")})}internalPopulateIndices(t){this.keyList.forEach(e=>{const{map:r}=this.keys[e],n=t[e];let i=r.get(n);i||(i=new Set,r.set(n,i)),i.add(t.id)})}internalRemoveIndices(t){this.keyList.forEach(e=>{const{map:r}=this.keys[e],n=t[e],i=r.get(n);i.delete(t.id),i.size||r.delete(n)})}}function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}const c=function(t,e){const r=global[t];return r||(global[t]=e,e)}("collectionStorageInMemory",new Map);class u{constructor({simulatedLatency:t=0}={}){o(this,"simulatedLatency",void 0),o(this,"mapTables",new Map),this.simulatedLatency=t}static connect(t){const e=new n.URL(t),r=e.hostname;if(r&&c.has(r))return c.get(r);const i=e.searchParams,a=Number(i.get("simulatedLatency")),s=new u({simulatedLatency:a});return r&&c.set(r,s),s}getCollection(t,e){return this.mapTables.has(t)||this.mapTables.set(t,new s(e,this.simulatedLatency)),this.mapTables.get(t)}}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(r,!0).forEach(function(e){d(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(r).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function d(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function f(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}function y(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}const h="_id",w="id";function b(t){return t===w?h:t}function g(t){if(!t||void 0===t[w])return t;const{[w]:e}=t,r=f(t,[w].map(y));return p({[h]:e},r)}function m(t){if(!t||void 0===t[h])return t;const{[h]:e}=t,r=f(t,[h].map(y));return p({[w]:e},r)}function O(t){const e={};return t&&(e[h]=!1,t.forEach(t=>{e[b(t)]=!0})),e}class v{constructor(t,e={}){this.collection=t,Object.keys(e).forEach(r=>{const n=r,i=e[n];i&&i.unique?t.createIndex({[n]:1},{unique:!0}):t.createIndex({[n]:"hashed"})})}async add(t){await this.collection.insertOne(g(t))}async update(t,e,r,{upsert:n=!1}={}){await this.collection.updateOne({[b(t)]:e},{$set:g(r)},{upsert:n})}async get(t,e,r){return m(await this.collection.findOne({[b(t)]:e},{projection:O(r)}))}async getAll(t,e,r){const n=[];let i;const a=O(r);return i=t?this.collection.find({[b(t)]:e},{projection:a}):this.collection.find({},{projection:a}),await i.forEach(t=>n.push(m(t))),n}}class j{constructor(t){this.db=t}static async connect(t){const{MongoClient:e}=await Promise.resolve().then(()=>r(3)),n=await e.connect(t,{useNewUrlParser:!0,useUnifiedTopology:!0});return new j(n.db())}getCollection(t,e){const r=this.db.collection(t);return new v(r,e)}}class P{constructor(t,e,r){this.baseCollection=t,this.fields=e,this.wrapper=r}async add(t){return this.baseCollection.add(await this.wrapAll(t))}async get(t,e,r){if(this.fields.includes(t))throw new Error("Cannot get by encrypted value");const n=await this.baseCollection.get(t,e,r);return n?this.unwrapAll(n):null}async getAll(t,e,r){if(void 0!==t&&this.fields.includes(t))throw new Error("Cannot get by encrypted value");const n=await this.baseCollection.getAll(t,e,r);return Promise.all(n.map(t=>this.unwrapAll(t)))}async update(t,e,r,n){if(this.fields.includes(t))throw new Error("Cannot update by encrypted value");const i=await this.wrapAll(r);return this.baseCollection.update(t,e,i,n)}async wrapAll(t){let e;this.wrapper.preWrap&&(e=await this.wrapper.preWrap(t));const r=Object.assign({},t);return await Promise.all(this.fields.map(async n=>{Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=await this.wrapper.wrap(n,t[n],e))})),r}async unwrapAll(t){let e;this.wrapper.preUnwrap&&(e=await this.wrapper.preUnwrap(t));const r=Object.assign({},t);return await Promise.all(this.fields.map(async n=>{Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=await this.wrapper.unwrap(n,t[n],e))})),r}}r(4),r(5),r(6);class k{constructor(t){var e,r,n;this.capacity=t,e=this,r="storage",n=new Map,r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n}set(t,e){this.storage.delete(t),this.storage.set(t,e),this.flush()}get(t){const e=this.storage.get(t);return this.storage.delete(t)&&this.storage.set(t,e),e}flush(){for(;this.storage.size>this.capacity;)this.storage.delete(this.storage.keys().next().value)}}var S=r(0),E=r.n(S);const x="aes-256-cbc";var C={encrypt:(t,e)=>{const r=E.a.randomBytes(16),n=E.a.createCipheriv(x,t,r),i=n.update(e,"utf8","base64");return`${x}:${r.toString("base64")}:${i}${n.final("base64")}`},decrypt:(t,e)=>{const[r,n,i]=e.split(":");if(r!==x)throw new Error("Unknown algorithm");const a=E.a.createDecipheriv(x,t,Buffer.from(n,"base64"));let s=a.update(i,"base64","utf8");return s+=a.final("utf8")},generateKey:()=>E.a.createSecretKey(E.a.randomBytes(32)),serialiseKey:t=>t.export().toString("base64"),deserialiseKey:t=>E.a.createSecretKey(Buffer.from(t,"base64"))};const L=(t,e=C)=>(r,n)=>{const i=e.deserialiseKey(t);return new P(n,r,{wrap:(t,r)=>e.encrypt(i,JSON.stringify(r)),unwrap:async(t,r)=>JSON.parse(await e.decrypt(i,r))})},M=(t,e=0,r=C)=>(n,i)=>{const a=new k(e),s=async e=>{const{id:n}=e;if(void 0===n)throw new Error("Must provide ID for encryption");const i=a.get(n);if(i)return i;let s;const o=await t.get("id",n,["key"]);return o?s=r.deserialiseKey(o.key):(s=await r.generateKey(),await t.add({id:n,key:r.serialiseKey(s)})),a.set(n,s),s};return new P(i,n,{wrap:(t,e,n)=>r.encrypt(n,JSON.stringify(e)),unwrap:async(t,e,n)=>JSON.parse(await r.decrypt(n,e)),preWrap:s,preUnwrap:s})},I=(t,e,r=0,n=C)=>(i,a)=>M(L(t,n)(["key"],e),r,n)(i,a);r.d(e,"MemoryDb",function(){return u}),r.d(e,"MongoDb",function(){return j}),r.d(e,"LruCache",function(){return k}),r.d(e,"WrappedCollection",function(){return P}),r.d(e,"encryptByKey",function(){return L}),r.d(e,"encryptByRecord",function(){return M}),r.d(e,"encryptByRecordWithMasterKey",function(){return I}),r.d(e,"nodeEncryptionSync",function(){return C});e.default=class{static async connect(t){let e;if(t.startsWith("memory"))e=u;else{if(!t.startsWith("mongodb"))throw new Error(`Unsupported database connection string: ${t}`);e=j}try{return await e.connect(t)}catch(e){throw new Error(`Failed to connect to database "${t}": ${e.message}`)}}}}])});
//# sourceMappingURL=index.js.map