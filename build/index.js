!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("websocket-express",[],t):"object"==typeof exports?exports["websocket-express"]=t():e["websocket-express"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("mongodb")},function(e,t){e.exports=require("url")},function(e,t,n){e.exports=n(7)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){"use strict";n.r(t);var r=n(2);function i(e){return e instanceof Buffer?`B${e.toString("base64")}`:`J${JSON.stringify(e)}`}function a(e){const t=e[0],n=e.substr(1);if("B"===t)return Buffer.from(n,"base64");if("J"===t)return JSON.parse(n);throw new Error("Unknown data type")}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e){return e?new Promise(t=>setTimeout(t,e)):null}function c(e){const t={};return Object.keys(e).forEach(n=>{t[n]=i(e[n])}),t}function l(e){const t={};return Object.keys(e).forEach(n=>{t[n]=a(e[n])}),t}class u{constructor(e={},t=0){this.simulatedLatency=t,o(this,"data",void 0),o(this,"keys",{}),this.data=new Map,Object.keys(e).forEach(t=>{const n=t;this.keys[n]={map:new Map,options:e[n]}})}async add(e){await s(this.simulatedLatency);const t=c(e);this.internalCheckDuplicates(t,!0),this.data.set(t.id,t),this.internalPopulateIndices(t)}async update(e,t,n,{upsert:r=!1}={}){await s(this.simulatedLatency);const i=this.internalGetSerialisedIds(e,t)[0];if(void 0===i)return void(r&&await this.add(Object.assign({[e]:t},n)));const a=this.data.get(i),o=l(a),u=Object.assign({},o,n);if(u.id!==o.id)throw new Error("Cannot update id");const p=c(u);this.internalRemoveIndices(a);try{this.internalCheckDuplicates(p,!1)}catch(e){throw this.internalPopulateIndices(a),e}this.data.set(p.id,p),this.internalPopulateIndices(p)}async get(e,t,n){const r=await this.getAll(e,t,n);return r.length?r[0]:null}async getAll(e,t,n){let r;return await s(this.simulatedLatency),(r=e?this.internalGetSerialisedIds(e,t):[...this.data.keys()]).map(e=>(function(e,t){if(!t)return e;const n={};return t.forEach(t=>{n[t]=e[t]}),n})(l(this.data.get(e)),n))}async remove(e,t){await s(this.simulatedLatency);const n=this.internalGetSerialisedIds(e,t);return n.forEach(e=>{const t=this.data.get(e);this.internalRemoveIndices(t),this.data.delete(e)}),n.length}internalGetSerialisedIds(e,t){const n=i(t);if("id"===e)return this.data.has(n)?[n]:[];const r=this.keys[e];if(!r)throw new Error(`Requested key ${e} not indexed`);const a=r.map.get(n);return a?[...a]:[]}internalCheckDuplicates(e,t){if(t&&this.data.has(e.id))throw new Error("duplicate");Object.entries(this.keys).forEach(([t,n])=>{const{map:r,options:i}=n;if(i.unique&&r.has(e[t]))throw new Error("duplicate")})}internalPopulateIndices(e){Object.entries(this.keys).forEach(([t,n])=>{const{map:r}=n,i=e[t];let a=r.get(i);a||(a=new Set,r.set(i,a)),a.add(e.id)})}internalRemoveIndices(e){Object.entries(this.keys).forEach(([t,n])=>{const{map:r}=n,i=e[t],a=r.get(i);a.delete(e.id),a.size||r.delete(i)})}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const d=function(e,t){const n=global[e];return n||(global[e]=t,t)}("collectionStorageInMemory",new Map);class f{constructor({simulatedLatency:e=0}={}){p(this,"simulatedLatency",void 0),p(this,"mapTables",new Map),this.simulatedLatency=e}static connect(e){const t=new r.URL(e),n=t.hostname;if(n&&d.has(n))return d.get(n);const i=t.searchParams,a=Number(i.get("simulatedLatency")),o=new f({simulatedLatency:a});return n&&d.set(n,o),o}getCollection(e,t){return this.mapTables.has(e)||this.mapTables.set(e,new u(t,this.simulatedLatency)),this.mapTables.get(e)}}var h=n(1);function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(n,!0).forEach(function(t){b(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function g(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}function m(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}const v="_id",O="id";function j(e){let t;if(void 0===e[O])t=Object.assign({},e);else{const{[O]:n}=e,r=g(e,[O].map(m));t=w({[v]:n},r)}return Object.keys(t).forEach(e=>{const n=t[e];if(n instanceof Buffer&&(t[e]=new h.Binary(n)),"object"==typeof n&&n._bsontype)throw new Error("Must use Buffer to provide binary data")}),t}function P(e){if(!e)return null;let t;if(void 0===e[v])t=Object.assign({},e);else{const{[v]:n}=e,r=g(e,[v].map(m));t=w({[O]:n},r)}return Object.keys(t).forEach(e=>{const n=t[e];"object"==typeof n&&"Binary"===n._bsontype&&(t[e]=n.buffer)}),t}function E(e){const t={};return e&&(t[v]=!1,e.forEach(e=>{t[function(e){return e===O?v:e}(e)]=!0})),t}class k{constructor(e,t={}){this.collection=e,Object.keys(t).forEach(n=>{const r=n,i=t[r];i&&i.unique?e.createIndex({[r]:1},{unique:!0}):e.createIndex({[r]:"hashed"})})}async add(e){await this.collection.insertOne(j(e))}async update(e,t,n,{upsert:r=!1}={}){await this.collection.updateOne(j({[e]:t}),{$set:j(n)},{upsert:r})}async get(e,t,n){return P(await this.collection.findOne(j({[e]:t}),{projection:E(n)}))}async getAll(e,t,n){const r=[];let i;const a=E(n);return i=e?this.collection.find(j({[e]:t}),{projection:a}):this.collection.find({},{projection:a}),await i.forEach(e=>r.push(P(e))),r}async remove(e,t){return(await this.collection.deleteMany(j({[e]:t}))).deletedCount||0}}class S{constructor(e){this.db=e}static async connect(e){const{MongoClient:t}=await Promise.resolve().then(()=>n(1)),r=await t.connect(e,{useNewUrlParser:!0,useUnifiedTopology:!0});return new S(r.db())}getCollection(e,t){const n=this.db.collection(e);return new k(n,t)}}function x(e,t){return t.some(t=>Object.prototype.hasOwnProperty.call(e,t))}class C{constructor(e,t,n){this.baseCollection=e,this.fields=t,this.wrapper=n}async add(e){return this.baseCollection.add(await this.wrapAll(e))}async get(e,t,n){if(this.fields.includes(e))throw new Error("Cannot get by encrypted value");const r=await this.baseCollection.get(e,t,n);return r?this.unwrapAll(r,{[e]:t}):null}async getAll(e,t,n){if(void 0!==e&&this.fields.includes(e))throw new Error("Cannot get by encrypted value");const r=await this.baseCollection.getAll(e,t,n),i=void 0!==e?{[e]:t}:void 0;return Promise.all(r.map(e=>this.unwrapAll(e,i)))}async update(e,t,n,r){if(this.fields.includes(e))throw new Error("Cannot update by encrypted value");const i=await this.wrapAll(n,{[e]:t});return this.baseCollection.update(e,t,i,r)}async remove(e,t){if(this.fields.includes(e))throw new Error("Cannot remove by encrypted value");if(!this.wrapper.preRemove)return this.baseCollection.remove(e,t);const n=await this.baseCollection.getAll(e,t,["id"]);return await Promise.all(n.map(async e=>{await this.wrapper.preRemove(e),await this.baseCollection.remove("id",e.id)})),n.length}async wrapAll(e,t){let n;if(this.wrapper.preWrap&&x(e,this.fields)){const r=t?Object.assign({},t,e):e;n=await this.wrapper.preWrap(r)}const r=Object.assign({},e);return await Promise.all(this.fields.map(async t=>{Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=await this.wrapper.wrap(t,e[t],n))})),r}async unwrapAll(e,t){let n;if(this.wrapper.preUnwrap&&x(e,this.fields)){const r=t?Object.assign({},t,e):e;n=await this.wrapper.preUnwrap(r)}const r=Object.assign({},e);return await Promise.all(this.fields.map(async t=>{Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=await this.wrapper.unwrap(t,e[t],n))})),r}}n(4);class M{constructor(e){var t,n,r;this.capacity=e,t=this,n="storage",r=new Map,n in t?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r}set(e,t){this.storage.delete(e),this.storage.set(e,t),this.flush()}get(e){const t=this.storage.get(e);return this.storage.delete(e)&&this.storage.set(e,t),t}remove(e){this.storage.delete(e)}flush(){for(;this.storage.size>this.capacity;)this.storage.delete(this.storage.keys().next().value)}}var I=n(0),B=n.n(I);const L="aes-256-cbc",A=Buffer.from(L,"utf8");var D={encrypt:(e,t)=>{const n=B.a.randomBytes(16),r=B.a.createCipheriv(L,e,n),i=r.update(t,"utf8"),a=r.final();return Buffer.concat([A,n,i,a])},decrypt:(e,t)=>{if(!t.slice(0,A.length).equals(A))throw new Error("Unknown encryption algorithm");const n=t.slice(A.length,A.length+16),r=t.slice(A.length+16),i=B.a.createDecipheriv(L,e,n);let a=i.update(r,void 0,"utf8");return a+=i.final("utf8")},generateKey:()=>B.a.createSecretKey(B.a.randomBytes(32)),serialiseKey:e=>e.export(),deserialiseKey:e=>B.a.createSecretKey(e)};function K(e){return(t,n)=>t&&n?e(t,n):e}function R(e,t=D){const n=t.deserialiseKey(e);return K((e,r)=>new C(r,e,{wrap:(e,r)=>t.encrypt(n,i(r)),unwrap:async(e,r)=>a(await t.decrypt(n,r))}))}function T(e,t=0,n=D){const r=new M(t),i=async(t,i)=>{const{id:a}=i;if(void 0===a)throw new Error("Must provide ID for encryption");const o=r.get(a);if(o)return o;let s;const c=await e.get("id",a,["key"]);if(c)s=n.deserialiseKey(c.key);else{if(!t)throw new Error("No encryption key found for record");s=await n.generateKey(),await e.add({id:a,key:n.serialiseKey(s)})}return r.set(a,s),s},a=async({id:t})=>{await e.remove("id",t),r.remove(t)};return K((e,t)=>new C(t,e,{wrap:(e,t,r)=>n.encrypt(r,JSON.stringify(t)),unwrap:async(e,t,r)=>JSON.parse(await n.decrypt(r,t)),preWrap:i.bind(null,!0),preUnwrap:i.bind(null,!1),preRemove:a}))}function U(e,t,n=0,r=D){return T(R(e,r)()(["key"],t),n,r)}n(5),n(6);n.d(t,"MemoryDb",function(){return f}),n.d(t,"MongoDb",function(){return S}),n.d(t,"LruCache",function(){return M}),n.d(t,"WrappedCollection",function(){return C}),n.d(t,"encryptByKey",function(){return R}),n.d(t,"encryptByRecord",function(){return T}),n.d(t,"encryptByRecordWithMasterKey",function(){return U}),n.d(t,"nodeEncryptionSync",function(){return D});t.default=class{static async connect(e){let t;if(e.startsWith("memory"))t=f;else{if(!e.startsWith("mongodb"))throw new Error(`Unsupported database connection string: ${e}`);t=S}try{return await t.connect(e)}catch(t){throw new Error(`Failed to connect to database "${e}": ${t.message}`)}}}}])});
//# sourceMappingURL=index.js.map